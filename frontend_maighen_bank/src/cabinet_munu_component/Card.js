
import React, {Component} from 'react';
import './Card.css';

const imgs = [
    {
        name: "Visa",
        imgurl: () => {
            return (<svg className="heipd" xmlns="http://www.w3.org/2000/svg"  width="70" height="20" viewBox="0 0 175.7 53.9">
                <path className="visa" d="M61.9 53.1l8.9-52.2h14.2l-8.9 52.2zm65.8-50.9c-2.8-1.1-7.2-2.2-12.7-2.2-14.1 0-24 7.1-24 17.2-.1 7.5 7.1 11.7 12.5 14.2 5.5 2.6 7.4 4.2 7.4 6.5 0 3.5-4.4 5.1-8.5 5.1-5.7 0-8.7-.8-13.4-2.7l-2-.9-2 11.7c3.3 1.5 9.5 2.7 15.9 2.8 15 0 24.7-7 24.8-17.8.1-5.9-3.7-10.5-11.9-14.2-5-2.4-8-4-8-6.5 0-2.2 2.6-4.5 8.1-4.5 4.7-.1 8 .9 10.6 2l1.3.6 1.9-11.3M164.2 1h-11c-3.4 0-6 .9-7.5 4.3l-21.1 47.8h14.9s2.4-6.4 3-7.8h18.2c.4 1.8 1.7 7.8 1.7 7.8h13.2l-11.4-52.1m-17.5 33.6c1.2-3 5.7-14.6 5.7-14.6-.1.1 1.2-3 1.9-5l1 4.5s2.7 12.5 3.3 15.1h-11.9zm-96.7-33.7l-14 35.6-1.5-7.2c-2.5-8.3-10.6-17.4-19.6-21.9l12.7 45.7h15.1l22.4-52.2h-15.1"/>
                <path fill="#F7A600"  d="M23.1.9h-22.9l-.2 1.1c17.9 4.3 29.7 14.8 34.6 27.3l-5-24c-.9-3.3-3.4-4.3-6.5-4.4" />
            </svg>)
        }},
    {
        name: "Mastercard",
        imgurl: () => { return (
            <svg className="heipd" xmlns="http://www.w3.org/2000/svg" aria-hidden="true" role="img" width="70" height="60"
                 preserveAspectRatio="xMidYMid meet" viewBox="0 0 256 199">
                <path
                    d="M46.54 198.011V184.84c0-5.05-3.074-8.342-8.343-8.342c-2.634 0-5.488.878-7.464 3.732c-1.536-2.415-3.731-3.732-7.024-3.732c-2.196 0-4.39.658-6.147 3.073v-2.634h-4.61v21.074h4.61v-11.635c0-3.731 1.976-5.488 5.05-5.488c3.072 0 4.61 1.976 4.61 5.488v11.635h4.61v-11.635c0-3.731 2.194-5.488 5.048-5.488c3.074 0 4.61 1.976 4.61 5.488v11.635h5.05Zm68.271-21.074h-7.463v-6.366h-4.61v6.366h-4.171v4.17h4.17v9.66c0 4.83 1.976 7.683 7.245 7.683c1.976 0 4.17-.658 5.708-1.536l-1.318-3.952c-1.317.878-2.853 1.098-3.951 1.098c-2.195 0-3.073-1.317-3.073-3.513v-9.44h7.463v-4.17Zm39.076-.44c-2.634 0-4.39 1.318-5.488 3.074v-2.634h-4.61v21.074h4.61v-11.854c0-3.512 1.536-5.488 4.39-5.488c.878 0 1.976.22 2.854.439l1.317-4.39c-.878-.22-2.195-.22-3.073-.22Zm-59.052 2.196c-2.196-1.537-5.269-2.195-8.562-2.195c-5.268 0-8.78 2.634-8.78 6.805c0 3.513 2.634 5.488 7.244 6.147l2.195.22c2.415.438 3.732 1.097 3.732 2.195c0 1.536-1.756 2.634-4.83 2.634c-3.073 0-5.488-1.098-7.025-2.195l-2.195 3.512c2.415 1.756 5.708 2.634 9 2.634c6.147 0 9.66-2.853 9.66-6.805c0-3.732-2.854-5.708-7.245-6.366l-2.195-.22c-1.976-.22-3.512-.658-3.512-1.975c0-1.537 1.536-2.415 3.951-2.415c2.635 0 5.269 1.097 6.586 1.756l1.976-3.732Zm122.495-2.195c-2.635 0-4.391 1.317-5.489 3.073v-2.634h-4.61v21.074h4.61v-11.854c0-3.512 1.537-5.488 4.39-5.488c.879 0 1.977.22 2.855.439l1.317-4.39c-.878-.22-2.195-.22-3.073-.22Zm-58.833 10.976c0 6.366 4.39 10.976 11.196 10.976c3.073 0 5.268-.658 7.463-2.414l-2.195-3.732c-1.756 1.317-3.512 1.975-5.488 1.975c-3.732 0-6.366-2.634-6.366-6.805c0-3.951 2.634-6.586 6.366-6.805c1.976 0 3.732.658 5.488 1.976l2.195-3.732c-2.195-1.757-4.39-2.415-7.463-2.415c-6.806 0-11.196 4.61-11.196 10.976Zm42.588 0v-10.537h-4.61v2.634c-1.537-1.975-3.732-3.073-6.586-3.073c-5.927 0-10.537 4.61-10.537 10.976c0 6.366 4.61 10.976 10.537 10.976c3.073 0 5.269-1.097 6.586-3.073v2.634h4.61v-10.537Zm-16.904 0c0-3.732 2.415-6.805 6.366-6.805c3.732 0 6.367 2.854 6.367 6.805c0 3.732-2.635 6.805-6.367 6.805c-3.951-.22-6.366-3.073-6.366-6.805Zm-55.1-10.976c-6.147 0-10.538 4.39-10.538 10.976c0 6.586 4.39 10.976 10.757 10.976c3.073 0 6.147-.878 8.562-2.853l-2.196-3.293c-1.756 1.317-3.951 2.195-6.146 2.195c-2.854 0-5.708-1.317-6.367-5.05h15.587v-1.755c.22-6.806-3.732-11.196-9.66-11.196Zm0 3.951c2.853 0 4.83 1.757 5.268 5.05h-10.976c.439-2.854 2.415-5.05 5.708-5.05Zm114.372 7.025v-18.879h-4.61v10.976c-1.537-1.975-3.732-3.073-6.586-3.073c-5.927 0-10.537 4.61-10.537 10.976c0 6.366 4.61 10.976 10.537 10.976c3.074 0 5.269-1.097 6.586-3.073v2.634h4.61v-10.537Zm-16.903 0c0-3.732 2.414-6.805 6.366-6.805c3.732 0 6.366 2.854 6.366 6.805c0 3.732-2.634 6.805-6.366 6.805c-3.952-.22-6.366-3.073-6.366-6.805Zm-154.107 0v-10.537h-4.61v2.634c-1.537-1.975-3.732-3.073-6.586-3.073c-5.927 0-10.537 4.61-10.537 10.976c0 6.366 4.61 10.976 10.537 10.976c3.074 0 5.269-1.097 6.586-3.073v2.634h4.61v-10.537Zm-17.123 0c0-3.732 2.415-6.805 6.366-6.805c3.732 0 6.367 2.854 6.367 6.805c0 3.732-2.635 6.805-6.367 6.805c-3.951-.22-6.366-3.073-6.366-6.805Z"/>
                <path fill="#FF5F00" d="M93.298 16.903h69.15v124.251h-69.15z"/>
                <path fill="#EB001B"
                      d="M97.689 79.029c0-25.245 11.854-47.637 30.074-62.126C114.373 6.366 97.47 0 79.03 0C35.343 0 0 35.343 0 79.029c0 43.685 35.343 79.029 79.029 79.029c18.44 0 35.343-6.366 48.734-16.904c-18.22-14.269-30.074-36.88-30.074-62.125Z"/>
                <path fill="#F79E1B"
                      d="M255.746 79.029c0 43.685-35.343 79.029-79.029 79.029c-18.44 0-35.343-6.366-48.734-16.904c18.44-14.488 30.075-36.88 30.075-62.125c0-25.245-11.855-47.637-30.075-62.126C141.373 6.366 158.277 0 176.717 0c43.686 0 79.03 35.563 79.03 79.029Z"/>
            </svg>
        )
        }
    },
    {
        name: "Lithic",
        imgurl: () => { return (
        <svg className="heipd" viewBox="2.349 1.79 406.108 84.9"  width="70" height="20"  xmlns="http://www.w3.org/2000/svg">
                <path d="M 5.757 2.99 C 3.357 2.99 1.757 5.39 2.557 7.59 L 21.657 58.29 C 22.157 59.59 23.457 60.49 24.857 60.49 L 59.657 60.49 C 62.057 60.49 63.657 58.09 62.857 55.89 L 43.757 5.19 C 43.257 3.89 41.957 2.99 40.557 2.99 L 5.757 2.99 L 5.757 2.99 Z"/>
                <path d="M 61.457 86.69 C 59.057 86.69 57.457 84.29 58.257 82.09 L 71.857 46.99 C 72.357 45.69 73.657 44.79 75.057 44.79 L 105.757 44.79 C 108.157 44.79 109.757 47.19 108.957 49.39 L 95.357 84.49 C 94.857 85.79 93.557 86.69 92.157 86.69 L 61.457 86.69 Z"/>
                <path d="M 147.857 84.89 L 147.857 7.99 L 157.557 7.99 L 157.557 77.19 L 194.057 77.19 L 194.057 84.79 L 147.857 84.79 L 147.857 84.89 Z"/>
                <path d="M 204.857 84.89 L 204.857 28.69 L 214.157 28.69 L 214.157 84.89 L 204.857 84.89 Z M 213.557 15.29 C 212.357 16.39 210.957 16.99 209.357 16.99 C 207.757 16.99 206.257 16.39 205.057 15.29 C 203.857 14.19 203.257 12.79 203.257 11.09 C 203.257 9.49 203.857 8.09 205.057 6.89 C 206.357 5.79 207.757 5.19 209.357 5.19 C 210.957 5.19 212.357 5.79 213.557 6.89 C 214.857 7.99 215.457 9.39 215.457 11.09 C 215.357 12.69 214.757 14.09 213.557 15.29 Z"/>
                <path d="M 248.457 85.69 C 243.357 85.69 239.457 84.39 236.757 81.69 C 234.057 78.99 232.757 75.39 232.757 70.79 L 232.757 36.19 L 224.357 36.19 L 224.357 28.69 L 232.757 28.69 L 232.757 15.89 L 242.057 15.89 L 242.057 28.69 L 255.657 28.69 L 255.657 36.19 L 242.057 36.19 L 242.057 69.99 C 242.057 75.39 244.457 78.19 249.257 78.19 C 251.957 78.19 254.357 77.79 256.357 76.99 L 256.357 84.49 C 254.157 85.29 251.457 85.69 248.457 85.69 Z"/>
                <path d="M 268.157 84.89 L 268.157 1.79 L 277.457 1.79 L 277.457 37.59 C 278.857 34.69 281.257 32.39 284.457 30.49 C 287.757 28.59 291.657 27.69 296.157 27.69 C 302.557 27.69 307.557 29.49 311.257 33.19 C 314.857 36.89 316.757 42.59 316.757 50.39 L 316.757 84.89 L 307.457 84.89 L 307.457 49.69 C 307.457 44.79 306.357 41.09 304.157 38.79 C 301.957 36.49 298.457 35.39 293.757 35.39 C 289.257 35.39 285.357 36.79 282.157 39.49 C 279.057 42.19 277.457 45.99 277.457 50.79 L 277.457 84.89 L 268.157 84.89 Z"/>
                <path d="M 332.757 84.89 L 332.757 28.69 L 342.057 28.69 L 342.057 84.89 L 332.757 84.89 Z M 341.457 15.29 C 340.257 16.39 338.857 16.99 337.257 16.99 C 335.657 16.99 334.157 16.39 332.957 15.29 C 331.757 14.19 331.157 12.79 331.157 11.09 C 331.157 9.49 331.757 8.09 332.957 6.89 C 334.257 5.79 335.657 5.19 337.257 5.19 C 338.857 5.19 340.257 5.79 341.457 6.89 C 342.757 7.99 343.357 9.39 343.357 11.09 C 343.357 12.69 342.757 14.09 341.457 15.29 Z"/>
                <path d="M 382.957 85.89 C 374.757 85.89 367.857 83.29 362.457 78.19 C 357.057 72.99 354.457 65.99 354.457 57.39 L 354.457 56.49 C 354.457 47.99 357.157 41.09 362.557 35.69 C 368.057 30.29 374.757 27.59 382.757 27.59 C 389.457 27.59 395.157 29.19 399.857 32.39 C 404.557 35.59 407.257 40.49 408.057 47.19 L 398.957 47.19 C 397.657 38.99 392.257 34.89 382.757 34.89 C 377.357 34.89 372.857 36.89 369.257 40.79 C 365.757 44.69 364.057 49.79 364.057 56.29 L 364.057 57.19 C 364.057 63.89 365.757 69.09 369.157 72.79 C 372.657 76.49 377.257 78.29 383.057 78.29 C 387.457 78.29 391.157 77.09 394.357 74.79 C 397.557 72.39 399.357 68.99 399.857 64.59 L 408.457 64.59 C 407.857 70.79 405.157 75.89 400.457 79.89 C 395.657 83.89 389.857 85.89 382.957 85.89 Z"/>
                </svg>

        )}
    }
];

const logoIds = [
    {
        name : "Visa",
        number : 1
    },
    {
        name : "Mastercard",
        number : 2
    },
    {
        name : "Lithic",
        number : 3
    }
]

class BCard extends Component {
    constructor(props) {
        super(props);
        this.state = {
            imgsrc:"",
            clicked: false,
            curst: "back",
            code: props.code ? props.code : '999',
            description: props.description ? props.description : 'Unknown error'
        }

        this.handleCardClick = this.handleCardClick.bind(this);
    }

    findmy(name){
        for(let i = 0; i < imgs.length; ++i) {
            if (imgs[i].name == name) {return imgs[i].imgurl;}
        }
    }

    componentDidMount() {
        let sr = this.findmy(this.props.name);
        console.log("Card from: ", this.props.name);
        console.log("Finded: ", sr);
        // let logo = choseLogo();
        this.setState({imgsrc: sr});
    }

    choseLogo() {
        console.log(imgs[0])
        return imgs[this.props.logo_id-1].imgurl();
    }

    handleCardClick() {
        this.setState({clicked: !this.state.clicked});
    }

    render() {
        const {code, description} = this.state;
        return (
            // <div className="credit-card lithic selectable">
            //     <div className="credit-card-last4">
            //         {this.props.last_four.slice(0,4)} {this.props.last_four.slice(4,8)} {this.props.last_four.slice(8,12)} {this.props.last_four.slice(12,16)}
            //     </div>
            //     <div className="credit-card-expiry">
            //         {this.props.validthru}
            //     </div>
            //
            //     <img src={this.state.imgsrc} />
            // </div>

            <div className={"cc "+this.state.curst} >
                <div className={"cc__front "+(this.state.clicked?"hid":"")}>
                    <div className="cc__brand">
                        <div className="cc__brand-logo">
                            {this.choseLogo()}
                        </div>
                        {/*<span className="cc__brand-text">{logoIds[this.props.logo_id-1].name}</span>*/}

                        <div className="cc__settings-bar" onClick={this.handleCardClick}>
                            <svg className="gear-icon icon" xmlns="http://www.w3.org/2000/svg"
                                 viewBox="0 0 24 24" width="24" height="24">
                                <path
                                    d="M9.668 2l-.492 2.523c-.821.31-1.58.744-2.246 1.291L4.506 4.98 2.174 9.02l1.94 1.686A8.012 8.012 0 004 12c0 .441.045.871.113 1.293l-1.94 1.686 2.333 4.042 2.424-.835c.666.547 1.425.98 2.246 1.29L9.668 22h4.664l.492-2.523c.821-.31 1.58-.744 2.246-1.291l2.424.835 2.332-4.042-1.94-1.686c.07-.422.114-.852.114-1.293 0-.441-.045-.871-.113-1.293l1.94-1.686-2.333-4.042-2.424.835a7.983 7.983 0 00-2.246-1.29L14.332 2H9.668zM12 8a4 4 0 110 8 4 4 0 010-8z"/>
                            </svg>
                        </div>
                    </div>
                    <div className="cc__number">
                        {/*<span className="cc__number-dot"></span>*/}
                        {/*<span className="cc__number-dot"></span>*/}
                        <span className="cc__digits"> {this.props.last_four.slice(0,4)} {this.props.last_four.slice(4,8)} {this.props.last_four.slice(8,12)} {this.props.last_four.slice(12,16)}</span>
                    </div>
                    <div className="d-flex flex-row align-items-center">
                        <div className="mr-5">
                            <div>Действ. до:</div>
                            <div>{this.props.validthru}</div>
                        </div>

                        <div className="cc__balance-text">	&#8381; {(Math.round(this.props.balance * 100) / 100).toFixed(2) }</div></div>
                </div>
                <div className={"cc__settings "+(!this.state.clicked?"hid":"")}>
                    <div className="cc__settings-menu">
                        <div className="cc__settings-menu-item">
                            {/*<div className="cc__settings-menu-item-icon">*/}
                                {/*<svg className="icon" xmlns="http://www.w3.org/2000/svg"*/}
                                {/*     viewBox="0 0 24 24" width="20" height="20">*/}
                                {/*    <path*/}
                                {/*        d="M12 1C8.676 1 6 3.676 6 7v1c-1.1 0-2 .9-2 2v10c0 1.1.9 2 2 2h12c1.1 0 2-.9 2-2V10c0-1.1-.9-2-2-2V7c0-3.324-2.676-6-6-6zm0 2c2.276 0 4 1.724 4 4v1H8V7c0-2.276 1.724-4 4-4zm0 10c1.1 0 2 .9 2 2s-.9 2-2 2-2-.9-2-2 .9-2 2-2z"/>*/}
                                {/*</svg>*/}
                            {/*</div>*/}
                            Держатель карты:
                            <b>CARDHOLDER USER</b>
                        </div>
                        <div className="cc__settings-menu-item">
                            {/*<div className="cc__settings-menu-item-icon">*/}
                            {/*    <svg fill="#fff" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 32 32"*/}
                            {/*         width="24px" height="24px">*/}
                            {/*        <path*/}
                            {/*            d="M 16 4 C 10.886719 4 6.617188 7.160156 4.875 11.625 L 6.71875 12.375 C 8.175781 8.640625 11.710938 6 16 6 C 19.242188 6 22.132813 7.589844 23.9375 10 L 20 10 L 20 12 L 27 12 L 27 5 L 25 5 L 25 8.09375 C 22.808594 5.582031 19.570313 4 16 4 Z M 25.28125 19.625 C 23.824219 23.359375 20.289063 26 16 26 C 12.722656 26 9.84375 24.386719 8.03125 22 L 12 22 L 12 20 L 5 20 L 5 27 L 7 27 L 7 23.90625 C 9.1875 26.386719 12.394531 28 16 28 C 21.113281 28 25.382813 24.839844 27.125 20.375 Z"/>*/}
                            {/*    </svg>*/}
                            {/*</div>*/}
                           CVV: {this.props.cvv}
                        </div>
                        {/*<div className="cc__settings-menu-item">*/}
                        {/*    <div className="cc__settings-menu-item-icon">*/}
                        {/*        <img src="https://assets.codepen.io/452974/more-48.png?format=auto"*/}
                        {/*        />*/}
                        {/*    </div>*/}
                        {/*    More*/}
                        {/*</div>*/}
                    </div>
                    <div className="cc__settings-bar" onClick={this.handleCardClick}>
                        <svg className="gear-icon icon" xmlns="http://www.w3.org/2000/svg"
                             viewBox="0 0 24 24" width="24" height="24">
                            <path
                                d="M9.668 2l-.492 2.523c-.821.31-1.58.744-2.246 1.291L4.506 4.98 2.174 9.02l1.94 1.686A8.012 8.012 0 004 12c0 .441.045.871.113 1.293l-1.94 1.686 2.333 4.042 2.424-.835c.666.547 1.425.98 2.246 1.29L9.668 22h4.664l.492-2.523c.821-.31 1.58-.744 2.246-1.291l2.424.835 2.332-4.042-1.94-1.686c.07-.422.114-.852.114-1.293 0-.441-.045-.871-.113-1.293l1.94-1.686-2.333-4.042-2.424.835a7.983 7.983 0 00-2.246-1.29L14.332 2H9.668zM12 8a4 4 0 110 8 4 4 0 010-8z"/>
                        </svg>
                    </div>
                </div>
            </div>
        );
    }
}

export default BCard;

